Certificate:
1. Background.
2. usecases

3. How key store works :
Generates a key pair (a public key and associated private key). Wraps the public key into an X.509 v3 self-signed certificate, which is stored as a single-element certificate chain. This certificate chain and the private key are stored in a new keystore entry identified by alias.


5. what's stored in keystore??
Your keystore contains 1 entry

sx, Aug 26, 2015, PrivateKeyEntry, 
Certificate fingerprint (SHA1): E3:F3:8F:A8:B6:86:0A:C4:0B:E3:72:09:B1:45:D2:40:07:D9:17:8B


7. One req:
   if the key exists, just click on it
   if not, create a key pair first

   5 req:
   create key pair auto for you

9. what needs to be filled in common name

10 terminology that Needs to be explained:
   Alias.
   Common Name

11. A general intro of background.  Pics included

12. What can be done in the future?? GUI is done. Code optimization . testing. etc.

13. The general flow:
    1. make a keystore
       * Keyword file can be selected.
    2. Make a req
    3. Make 5 reqs
    5. display
    6. Sign the certificate
       * Explain why there are 2 warnings.
       GtkButton:use-stock is deprecated and shouldn't be used anymore,
       It will be removed in a future version.

       what is use-stock??
       http://www.pygtk.org/pygtk2reference/gtk-stock-items.html
       Needs to be specified in the doc.

       select multiple files and what if the selected file is not a request???
       check this -----BEGIN NEW CERTIFICATE REQUEST----- and filter the file sufix.

	check what is needed to sign the requests.

    7. export the certificate.

    




11. Add comments before methods and explain where these methods are used.

12. can be sorted in selection

13. hard to maintain.
14. file choose error protection.

15. retrieve the content in keystore and display it in a nicer format